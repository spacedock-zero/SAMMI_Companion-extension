[extension_name]
SAMMI Companion
[extension_info]
A nice companion for SAMMI
[extension_version]
{{ version }}
[insert_external]
<div>
{{ html }}
</div>
[insert_command]

SAMMI.extCommand('Companion: Request TTS', 3355443, 52, {
	text: ['Text', 14, 'Hello!']
});

main();
[insert_hook]
//Deprecated
[insert_script]
function reconnect(){
	const companionConnectButton = document.getElementById('companion-websocket-connect')
	const companionConnectStatus = document.getElementById('companion-websocket-status')

	if(!companionConnectButton || !companionConnectStatus){
		SAMMI.alert("SAMMI Companion [Extension] Error")
		return
	}
	const saved_companion_port = localStorage.getItem('companion_port') ?? '19135'
	const saved_companion_host = localStorage.getItem('companion_host') ?? 'localhost'
	let ws = new WebSocket(`ws://${saved_companion_host}:${saved_companion_port}`)
	ws.addEventListener('open', ()=>{
		console.info('Companion WS Open')
		companionConnectButton.innerText = `Disconnect`
		companionConnectStatus.innerText = `Connected`
	})
	ws.addEventListener('close', ()=>{
		console.info('Companion WS Closed')
		companionConnectButton.innerText = `Connect`
		companionConnectStatus.innerText = `Waiting`
	})
	return ws;
}
function main() {
	console.info("Bridge Connected, Loading SAMMI Companion [Extension]");
	const companionConnectButton = document.getElementById('companion-websocket-connect')
	if(!companionConnectButton){
		SAMMI.alert("SAMMI Companion [Extension] Error")
		return
	}

	let ws = reconnect()

	companionConnectButton.addEventListener("pointerdown", ()=>{
		if(ws && (ws.readyState == ws.OPEN)){
			ws.close()
		}
		else {
			ws = reconnect()
			return;
		}

	})

	sammiclient.on('Companion: Request TTS', (payload) => {
		const { FromButton }  = payload.Data 
		
		const text = payload.Data.text
		const packet = {
			version: 1,
			type: 'tts_request',
			body: text
		}
		ws?.send(JSON.stringify(packet))
	});

	SAMMI.alert("SAMMI Companion Ready")
}
[insert_over]
{ 
	"sammi_version": "2023.3.0"
}
