[extension_name]
SAMMI Companion
[extension_info]
A nice companion for SAMMI
[extension_version]
{{ version }}
[insert_external]
<div>
{{ html }}
</div>
[insert_command]

/* Request */
SAMMI.extCommand('Companion: TTS Request', 3355443, 52, {
	text: ['Text', 14, 'Hello!']
});
/* Control */
SAMMI.extCommand('Companion: TTS Skip', 3355443, 52, {
	text: ['Will Skip to next TTS in queue', 30, 'Skip!']
});
SAMMI.extCommand('Companion: TTS Queue Pause', 3355443, 52, {
	text: ['Will Pause the Queue', 30, 'Pause Queue']
});
SAMMI.extCommand('Companion: TTS Queue Continue', 3355443, 52, {
	text: ['Will Resume the Queue', 30, 'Resume Queue']
});
/* Param */
SAMMI.extCommand('Companion: TTS Rate', 3355443, 52, {
	text: ['Rate', 11, 1]
});
SAMMI.extCommand('Companion: TTS Volume', 3355443, 52, {
	text: ['Volume', 11, 0.7]
});


main();
[insert_hook]
//Deprecated
[insert_script]
function handleSongRecoPacket(data){
	switch (data.type) {
		case 'songreco_lyric':
			SAMMI.setVariable('songreco_lyric', data.body, 'companion-songreco')
		break;
		case 'songreco_lyrics':
			SAMMI.setVariable('songreco_lyrics', data.body, 'companion-songreco')
		break;
		case 'songreco_details':
			SAMMI.setVariable('songreco_track', data.body, 'companion-songreco')
		break;
		default:
			console.error("Unknown songreco packet", data)
			break;
	}
	SAMMI.triggerExt(`companion-songreco`)
}
function reconnect(){
	const companionConnectButton = document.getElementById('companion-websocket-connect')
	const companionConnectStatus = document.getElementById('companion-websocket-status')

	if(!companionConnectButton || !companionConnectStatus){
		SAMMI.alert("SAMMI Companion [Extension] Error")
		return
	}
	const saved_companion_port = localStorage.getItem('companion_port') ?? '19135'
	const saved_companion_host = localStorage.getItem('companion_host') ?? 'localhost'
	try{
	let ws = new WebSocket(`ws://${saved_companion_host}:${saved_companion_port}`)
	ws.addEventListener('open', ()=>{
		console.info('Companion WS Open')
		companionConnectButton.innerText = `Disconnect`
		companionConnectStatus.innerText = `Connected`
	})
	ws.addEventListener('close', ()=>{
		console.info('Companion WS Closed')
		companionConnectButton.innerText = `Connect`
		companionConnectStatus.innerText = `Waiting`
	})
	ws.addEventListener("message",(evt)=>{
		if(typeof evt.data != "string") return
		try {
			const parsed = JSON.parse(evt.data);
			if(!parsed) return;
			if(parsed.type.includes("songreco_")){
				handleSongRecoPacket(parsed)
				return
			}
			SAMMI.triggerExt(`companion-${parsed.type}`, parsed)
		} catch (error) {
			console.warn("Error Receiving Message", error)
		}
	})
	return ws;
	}catch(err){
		return reconnect()
	}
}
function main() {
	console.info("Bridge Connected, Loading SAMMI Companion [Extension]");
	localStorage.setItem('companion_autoconnect', "true")
	const companionConnectButton = document.getElementById('companion-websocket-connect')
	const companionConnectStatus = document.getElementById('companion-websocket-status')

	if(!companionConnectButton || !companionConnectStatus){
		SAMMI.alert("SAMMI Companion [Extension] Error")
		return
	}

	let ws = reconnect()

	companionConnectButton.addEventListener("pointerdown", ()=>{
		if(ws && (ws.readyState == ws.OPEN)){
			localStorage.setItem('companion_autoconnect', "false")
			ws.close()
		}
		else {
			localStorage.setItem('companion_autoconnect', "true")
			ws = reconnect()
			return;
		}
	})

	setInterval(()=>{
		if(ws && (ws.readyState == ws.OPEN)) return;
		if(localStorage.getItem('companion_autoconnect') == "true"){
			companionConnectStatus.innerText = "Retrying..."
			ws = reconnect()
		}
	}, 30 * 1000)

	sammiclient.on('Companion: TTS Request', (payload) => {
		const { FromButton }  = payload.Data 
		
		const text = payload.Data.text
		const packet = {
			version: 1,
			type: 'tts_request',
			body: text
		}

		if(!ws || (ws.readyState != ws.OPEN)){
			SAMMI.alert("Companion Not Connected, TTS Request Lost")
			return;
		}
		ws.send(JSON.stringify(packet))
	});
	sammiclient.on('Companion: TTS Skip', (payload) => {
		const packet = {
			version: 1,
			type: 'tts_skip',
		}

		if(!ws || (ws.readyState != ws.OPEN)){
			SAMMI.alert("Companion Not Connected, TTS Request Lost")
			return;
		}
		ws.send(JSON.stringify(packet))
	});
	sammiclient.on('Companion: TTS Queue Continue', (payload) => {
		const packet = {
			version: 1,
			type: 'tts_queuecontinue',
		}

		if(!ws || (ws.readyState != ws.OPEN)){
			SAMMI.alert("Companion Not Connected, TTS Request Lost")
			return;
		}
		ws.send(JSON.stringify(packet))
	});
	sammiclient.on('Companion: TTS Queue Pause', (payload) => {
		const packet = {
			version: 1,
			type: 'tts_queuestop',
		}

		if(!ws || (ws.readyState != ws.OPEN)){
			SAMMI.alert("Companion Not Connected, TTS Request Lost")
			return;
		}
		ws.send(JSON.stringify(packet))
	});
	sammiclient.on('Companion: TTS Rate', (payload) => {
		const { FromButton }  = payload.Data 
		
		const text = payload.Data.text
		const packet = {
			version: 1,
			type: 'tts_rate',
			body: text
		}

		if(!ws || (ws.readyState != ws.OPEN)){
			SAMMI.alert("Companion Not Connected, TTS Request Lost")
			return;
		}
		ws.send(JSON.stringify(packet))
	});
	sammiclient.on('Companion: TTS Volume', (payload) => {
		const { FromButton }  = payload.Data 
		
		const text = payload.Data.text
		const packet = {
			version: 1,
			type: 'tts_volume',
			body: text
		}

		if(!ws || (ws.readyState != ws.OPEN)){
			SAMMI.alert("Companion Not Connected, TTS Request Lost")
			return;
		}
		ws.send(JSON.stringify(packet))
	});

	SAMMI.alert("SAMMI Companion Ready")
}
[insert_over]
{ "deck_data": "{ "background_color": 5385234.0, "on": true, "grid_y": 7.0, "snap_grid": 1.0, "lb_version": "2025.1.1", "background_image": "", "sammi_version": "2025.1.1", "encrypted": 0.0, "adaptive_resizing": 1.0, "unique_id": "20250630175735690828901", "button_list": [ { "color": 16042349.0, "persistent": 1.0, "text": "OpennCompanion", "release_duration": 0.0, "queueable": 0.0, "command_list": [ { "b1": "", "cmd": 306.0, "obsid": "Main", "pos": 0.0, "vis": 1.0, "ms": 0.0, "sel": false, "dis": 0.0, "xpan": 0.0, "b0": "start sammi-companion://open" } ], "press_type": 0.0, "x": 0.125, "is_transparent": 0.0, "border": 0.0, "image": "", "triggers": [ ], "group_id": "", "overlappable": 0.0, "init_variable": "", "deck": 6.0, "width": 0.125, "button_id": "ID1", "button_duration": 0.0, "y": 0.14285714285714284921269268124888, "switch_deck": "", "height": 0.28571428571428575393653659375559, "release_list": [ ], "functions": 65.0, "stretch": 0.0 }, { "color": 14572469.0, "persistent": 1.0, "text": "Send TTS Request", "release_duration": 0.0, "queueable": 0.0, "command_list": [ { "text": "Hello from SAMMI!", "cmd": 0.0, "obsid": "Main", "pos": 0.0, "vis": 1.0, "ms": 0.0, "sel": false, "dis": 0.0, "xpan": 0.0, "extcmd": "Companion: Request TTS", "ext": "SAMMI Bridge" } ], "press_type": 0.0, "x": 0.25, "is_transparent": 0.0, "border": 0.0, "image": "", "triggers": [ ], "group_id": "", "overlappable": 0.0, "init_variable": "", "deck": 6.0, "width": 0.125, "button_id": "ID3", "button_duration": 0.0, "y": 0.14285714285714284921269268124888, "switch_deck": "", "height": 0.28571428571428575393653659375559, "release_list": [ ], "functions": 65.0, "stretch": 0.0 }, { "color": 7203687.0, "persistent": 1.0, "text": "Mouse Click", "release_duration": 0.0, "queueable": 0.0, "command_list": [ { "b1": "all", "cmd": 66.0, "obsid": "Main", "pos": 0.0, "vis": 1.0, "ms": 0.0, "sel": false, "dis": 0.0, "xpan": 0.0, "b0": "mousepress" } ], "press_type": 0.0, "x": 0.125, "is_transparent": 0.0, "border": 0.0, "image": "", "triggers": [ { "case_sensitive": 0.0, "message": "companion-mousepress", "group_id": "", "button_id": "companion-click", "trg": 12.0, "allow_empty_wildcard": 0.0 } ], "group_id": "", "overlappable": 0.0, "init_variable": "", "deck": 6.0, "width": 0.125, "button_id": "companion-click", "button_duration": 0.0, "y": 0.71428571428571430157461463750224, "switch_deck": "", "height": 0.14285714285714290472384391250671, "release_list": [ ], "functions": 81.0, "stretch": 0.0 }, { "color": 7203687.0, "persistent": 1.0, "text": "Key Pressed", "release_duration": 0.0, "queueable": 0.0, "command_list": [ { "b1": "all", "cmd": 66.0, "obsid": "Main", "pos": 0.0, "vis": 1.0, "ms": 0.0, "sel": false, "dis": 0.0, "xpan": 0.0, "b0": "keypress" } ], "press_type": 0.0, "x": 0.125, "is_transparent": 0.0, "border": 0.0, "image": "", "triggers": [ { "case_sensitive": 0.0, "message": "companion-keypress", "group_id": "", "button_id": "companion-keypress", "trg": 12.0, "allow_empty_wildcard": 0.0 } ], "group_id": "", "overlappable": 0.0, "init_variable": "", "deck": 6.0, "width": 0.125, "button_id": "companion-keypress", "button_duration": 0.0, "y": 0.57142857142857139685077072499553, "switch_deck": "", "height": 0.14285714285714284921269268124888, "release_list": [ ], "functions": 81.0, "stretch": 0.0 }, { "color": 14572469.0, "persistent": 1.0, "text": "Skip TTS", "release_duration": 0.0, "queueable": 0.0, "command_list": [ { "text": "Skip!", "cmd": 0.0, "obsid": "Main", "pos": 0.0, "vis": 1.0, "ms": 0.0, "sel": false, "dis": 0.0, "xpan": 0.0, "extcmd": "Companion: TTS Skip", "ext": "SAMMI Bridge" } ], "press_type": 0.0, "x": 0.375, "is_transparent": 0.0, "border": 0.0, "image": "", "triggers": [ ], "group_id": "", "overlappable": 0.0, "init_variable": "", "deck": 6.0, "width": 0.125, "button_id": "ID7", "button_duration": 0.0, "y": 0.14285714285714284921269268124888, "switch_deck": "", "height": 0.14285714285714282145711706561997, "release_list": [ ], "functions": 65.0, "stretch": 0.0 }, { "color": 14572469.0, "persistent": 1.0, "text": "Pause Queue", "release_duration": 0.0, "queueable": 0.0, "command_list": [ { "text": "Pause Queue", "cmd": 0.0, "obsid": "Main", "pos": 0.0, "vis": 1.0, "ms": 0.0, "sel": false, "dis": 0.0, "xpan": 0.0, "extcmd": "Companion: TTS Queue Pause", "ext": "SAMMI Bridge" } ], "press_type": 0.0, "x": 0.625, "is_transparent": 0.0, "border": 0.0, "image": "", "triggers": [ ], "group_id": "", "overlappable": 0.0, "init_variable": "", "deck": 6.0, "width": 0.125, "button_id": "ID8", "button_duration": 0.0, "y": 0.14285714285714284921269268124888, "switch_deck": "", "height": 0.14285714285714282145711706561997, "release_list": [ ], "functions": 65.0, "stretch": 0.0 }, { "color": 14572469.0, "persistent": 1.0, "text": "Resume Queue", "release_duration": 0.0, "queueable": 0.0, "command_list": [ { "text": "Resume Queue", "cmd": 0.0, "obsid": "Main", "pos": 0.0, "vis": 1.0, "ms": 0.0, "sel": 0.0, "dis": 0.0, "xpan": 0.0, "extcmd": "Companion: TTS Queue Continue", "ext": "SAMMI Bridge" } ], "press_type": 0.0, "x": 0.5, "is_transparent": 0.0, "border": 0.0, "image": "", "triggers": [ ], "group_id": "", "overlappable": 0.0, "init_variable": "", "deck": 6.0, "width": 0.125, "button_id": "ID9", "button_duration": 0.0, "y": 0.14285714285714284921269268124888, "switch_deck": "", "height": 0.14285714285714282145711706561997, "release_list": [ ], "functions": 65.0, "stretch": 0.0 }, { "color": 14572469.0, "persistent": 1.0, "text": "TTS Rate", "release_duration": 0.0, "queueable": 0.0, "command_list": [ { "text": 1.0, "cmd": 0.0, "obsid": "Main", "pos": 0.0, "vis": 1.0, "ms": 0.0, "sel": 0.0, "dis": 0.0, "xpan": 0.0, "extcmd": "Companion: TTS Rate", "ext": "SAMMI Bridge" } ], "press_type": 0.0, "x": 0.375, "is_transparent": 0.0, "border": 0.0, "image": "", "triggers": [ ], "group_id": "", "overlappable": 0.0, "init_variable": "", "deck": 6.0, "width": 0.125, "button_id": "ID11", "button_duration": 0.0, "y": 0.28571428571428569842538536249776, "switch_deck": "", "height": 0.14285714285714282145711706561997, "release_list": [ ], "functions": 65.0, "stretch": 0.0 }, { "color": 14572469.0, "persistent": 1.0, "text": "TTS Volume", "release_duration": 0.0, "queueable": 0.0, "command_list": [ { "text": 0.70382882882882880082320298242848, "cmd": 0.0, "obsid": "Main", "pos": 0.0, "vis": 1.0, "ms": 0.0, "sel": false, "dis": 0.0, "xpan": 0.0, "extcmd": "Companion: TTS Volume", "ext": "SAMMI Bridge" } ], "press_type": 0.0, "x": 0.5, "is_transparent": 0.0, "border": 0.0, "image": "", "triggers": [ ], "group_id": "", "overlappable": 0.0, "init_variable": "", "deck": 6.0, "width": 0.125, "button_id": "ID12", "button_duration": 0.0, "y": 0.28571428571428569842538536249776, "switch_deck": "", "height": 0.14285714285714282145711706561997, "release_list": [ ], "functions": 65.0, "stretch": 0.0 }, { "color": 5934035.0, "persistent": 1.0, "text": "Song Recognition", "release_duration": 0.0, "queueable": 0.0, "command_list": [ ], "press_type": 0.0, "x": 0.375, "is_transparent": 0.0, "border": 0.0, "image": "", "triggers": [ ], "group_id": "", "overlappable": 0.0, "init_variable": "", "deck": 6.0, "width": 0.125, "button_id": "companion-songreco", "button_duration": 0.0, "y": 0.57142857142857139685077072499553, "switch_deck": "", "height": 0.14285714285714284921269268124888, "release_list": [ ], "functions": 64.0, "stretch": 0.0 } ], "deck_name": "Companion", "grid_x": 8.0, "stretch": 0.0 }", "unique_id": "20250630175735690828901", "include_image": { } }